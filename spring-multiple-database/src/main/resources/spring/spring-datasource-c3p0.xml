<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd">
    <bean id="parentDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="com.mysql.jdbc.Driver"/>
        <property name="acquireRetryDelay" value="1000"/>
        <property name="acquireRetryAttempts" value="60"/>
        <property name="breakAfterAcquireFailure" value="false"/>
        <!--连接池中保留的最大连接数。默认值: 15 -->
        <property name="maxPoolSize" value="10"/>
        <!-- 连接池中保留的最小连接数，默认为：3 -->
        <property name="minPoolSize" value="0"/>
        <!-- 初始化连接池中的连接数，取值应在minPoolSize与maxPoolSize之间，默认为3 -->
        <property name="initialPoolSize" value="10"/>
    </bean>

    <!-- 数据源1 -->
    <bean id="dataSource1" parent="parentDataSource">
        <property name="jdbcUrl" value="${jdbc_url1}"/>
        <property name="user" value="${jdbc_username1}"/>
        <property name="password" value="${jdbc_password1}"/>
    </bean>

    <!-- 数据源2 -->
    <bean id="dataSource2" parent="parentDataSource">
        <property name="jdbcUrl" value="${jdbc_url2}"/>
        <property name="user" value="${jdbc_username2}"/>
        <property name="password" value="${jdbc_password2}"/>
    </bean>

    <!--统一的dataSource -->
    <bean id="dynamicDataSource" class="cn.dqb.common.DynamicDataSource">
        <property name="targetDataSources">
            <map key-type="java.lang.String">
                <!--通过不同的key决定用哪个dataSource -->
                <entry value-ref="dataSource1" key="dataSource1"/>
                <entry value-ref="dataSource2" key="dataSource2"/>
            </map>
        </property>
        <!--设置默认的dataSource -->
        <property name="defaultTargetDataSource" ref="dataSource1"/>
    </bean>

    <!-- mybatis文件配置，扫描所有mapper文件 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="configLocation" value="classpath:mybatis_configuration.xml"/>
        <property name="dataSource" ref="dynamicDataSource"/>
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>

    <!-- spring与mybatis整合配置，扫描所有dao ,生成与DAO类相同名字的bean（除了首字母小写） -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="cn.dqb.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dynamicDataSource"/>
    </bean>
</beans>