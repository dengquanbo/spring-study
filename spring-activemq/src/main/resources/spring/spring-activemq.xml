<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 启动@aspectj的自动代理支持-->
    <aop:aspectj-autoproxy/>

    <bean id="targetConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL" value="${activeMQ.url}"/>
        <!--异步发送，不等待服务端返回确认-->
        <property name="useAsyncSend" value="true"/>
        <!--设置为异步，消费者消费完后自动向服务端返回结果-->
        <property name="dispatchAsync" value="false"/>
        <!-- 客户端session是否使用异步转发 -->
        <property name="alwaysSessionAsync" value="true"/>
        <property name="optimizeAcknowledge" value="false"/>
        <property name="optimizeAcknowledgeTimeOut" value="1000"/>
        <property name="prefetchPolicy" ref="prefetchPolicy"/>
    </bean>

    <bean id="prefetchPolicy" class="org.apache.activemq.ActiveMQPrefetchPolicy">
        <property name="queuePrefetch" value="20"/>
    </bean>

    <!-- Spring用于管理真正的ConnectionFactory的ConnectionFactory -->
    <bean id="cachingConnectionFactory" class="org.springframework.jms.connection.CachingConnectionFactory">
        <property name="targetConnectionFactory" ref="targetConnectionFactory"/>
        <!-- Session缓存数量 -->
        <property name="sessionCacheSize" value="10"/>
    </bean>


    <bean id="testDestination" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg value="cn.dqb.test2"/>
    </bean>

    <bean id="consumer2Listener" class="cn.dqb.activemq.ConsumerListener2"/>

<!--    <bean id="consumer2Container" class="org.springframework.jms.listener.SimpleMessageListenerContainer">
        <property name="connectionFactory" ref="connectionFactory"/>

        <property name="destination" ref="testDestination"/>

        <property name="acceptMessagesWhileStopping" value="false"/>

        <property name="messageListener" ref="consumer2Listener"/>

        <property name="concurrentConsumers" value="30"/>
    </bean>-->


    <bean id="jmsTransactionManager" class="org.springframework.jms.connection.JmsTransactionManager">
        <property name="connectionFactory" ref="cachingConnectionFactory"/>
    </bean>

    <!-- 消息监听容器 -->
    <bean class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="cachingConnectionFactory"/>
        <property name="destination" ref="testDestination"/>
        <property name="messageListener" ref="consumer2Listener"/>
        <property name="concurrentConsumers" value="20"/>

        <property name="transactionManager" ref="jmsTransactionManager"/>
        <property name="sessionTransacted" value="true"/>

       <!-- <property name="sessionTransacted" value="false"/>-->
    </bean>


    <bean id="queue3" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg value="cn.dqb.test3"/>
    </bean>

    <bean id="consumer3Listener" class="cn.dqb.activemq.ConsumerListener3"/>

    <!-- 消息监听容器 -->
    <bean class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="cachingConnectionFactory"/>
        <property name="destination" ref="queue3"/>
        <property name="messageListener" ref="consumer3Listener"/>
        <property name="concurrentConsumers" value="20"/>
        <property name="transactionManager" ref="jmsTransactionManager"/>
        <!--<property name="sessionTransacted" value="false"/>-->
    </bean>

    <!-- Spring提供的JMS工具类，它可以进行消息发送、接收等 -->
    <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <!-- 这个connectionFactory对应的是我们定义的Spring提供的那个ConnectionFactory对象 -->
        <property name="explicitQosEnabled" value="true"/>
        <property name="receiveTimeout" value="6000"/>
        <!-- 设置PERSISTENT模式-->
        <property name="deliveryPersistent" value="true"/>
        <property name="deliveryMode" value="2"/>
        <!-- 设置优先级, 默认为4 0-4表示普通消息，5-9表示加急消息 -->
        <property name="priority" value="9"/>
        <property name="sessionAcknowledgeMode" value="2"/>
        <property name="connectionFactory" ref="cachingConnectionFactory"/>
    </bean>


</beans>